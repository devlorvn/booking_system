// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: src/ticket/ticket.proto

package ticket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ticket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId       string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatNumber    string                 `protobuf:"bytes,3,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`
	Section       string                 `protobuf:"bytes,4,opt,name=section,proto3" json:"section,omitempty"`
	Price         float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"` // available, reserved, sold
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ticket) Reset() {
	*x = Ticket{}
	mi := &file_src_ticket_ticket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ticket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ticket) ProtoMessage() {}

func (x *Ticket) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ticket.ProtoReflect.Descriptor instead.
func (*Ticket) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *Ticket) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Ticket) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Ticket) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *Ticket) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *Ticket) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Ticket) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Ticket) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Ticket) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetTicketByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTicketByIdRequest) Reset() {
	*x = GetTicketByIdRequest{}
	mi := &file_src_ticket_ticket_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTicketByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketByIdRequest) ProtoMessage() {}

func (x *GetTicketByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTicketByIdRequest) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{1}
}

func (x *GetTicketByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTicketByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTicketByIdResponse) Reset() {
	*x = GetTicketByIdResponse{}
	mi := &file_src_ticket_ticket_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTicketByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketByIdResponse) ProtoMessage() {}

func (x *GetTicketByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTicketByIdResponse) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{2}
}

func (x *GetTicketByIdResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type CreateTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatNumber    string                 `protobuf:"bytes,2,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`
	Section       string                 `protobuf:"bytes,3,opt,name=section,proto3" json:"section,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketRequest) Reset() {
	*x = CreateTicketRequest{}
	mi := &file_src_ticket_ticket_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketRequest) ProtoMessage() {}

func (x *CreateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketRequest.ProtoReflect.Descriptor instead.
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{3}
}

func (x *CreateTicketRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *CreateTicketRequest) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *CreateTicketRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *CreateTicketRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type CreateTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTicketResponse) Reset() {
	*x = CreateTicketResponse{}
	mi := &file_src_ticket_ticket_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketResponse) ProtoMessage() {}

func (x *CreateTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketResponse.ProtoReflect.Descriptor instead.
func (*CreateTicketResponse) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type UpdateTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	EventId       string                 `protobuf:"bytes,2,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	SeatNumber    string                 `protobuf:"bytes,3,opt,name=seat_number,json=seatNumber,proto3" json:"seat_number,omitempty"`
	Section       string                 `protobuf:"bytes,4,opt,name=section,proto3" json:"section,omitempty"`
	Price         float64                `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketRequest) Reset() {
	*x = UpdateTicketRequest{}
	mi := &file_src_ticket_ticket_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketRequest) ProtoMessage() {}

func (x *UpdateTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketRequest.ProtoReflect.Descriptor instead.
func (*UpdateTicketRequest) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTicketRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *UpdateTicketRequest) GetSeatNumber() string {
	if x != nil {
		return x.SeatNumber
	}
	return ""
}

func (x *UpdateTicketRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

func (x *UpdateTicketRequest) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpdateTicketRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UpdateTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ticket        *Ticket                `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTicketResponse) Reset() {
	*x = UpdateTicketResponse{}
	mi := &file_src_ticket_ticket_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketResponse) ProtoMessage() {}

func (x *UpdateTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketResponse.ProtoReflect.Descriptor instead.
func (*UpdateTicketResponse) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

type DeleteTicketRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketRequest) Reset() {
	*x = DeleteTicketRequest{}
	mi := &file_src_ticket_ticket_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketRequest) ProtoMessage() {}

func (x *DeleteTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketRequest.ProtoReflect.Descriptor instead.
func (*DeleteTicketRequest) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTicketRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTicketResponse) Reset() {
	*x = DeleteTicketResponse{}
	mi := &file_src_ticket_ticket_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketResponse) ProtoMessage() {}

func (x *DeleteTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketResponse.ProtoReflect.Descriptor instead.
func (*DeleteTicketResponse) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAvailableTicketsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Section       string                 `protobuf:"bytes,2,opt,name=section,proto3" json:"section,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableTicketsRequest) Reset() {
	*x = GetAvailableTicketsRequest{}
	mi := &file_src_ticket_ticket_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableTicketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTicketsRequest) ProtoMessage() {}

func (x *GetAvailableTicketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTicketsRequest.ProtoReflect.Descriptor instead.
func (*GetAvailableTicketsRequest) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{9}
}

func (x *GetAvailableTicketsRequest) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *GetAvailableTicketsRequest) GetSection() string {
	if x != nil {
		return x.Section
	}
	return ""
}

type GetAvailableTicketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tickets       []*Ticket              `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAvailableTicketsResponse) Reset() {
	*x = GetAvailableTicketsResponse{}
	mi := &file_src_ticket_ticket_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAvailableTicketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAvailableTicketsResponse) ProtoMessage() {}

func (x *GetAvailableTicketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAvailableTicketsResponse.ProtoReflect.Descriptor instead.
func (*GetAvailableTicketsResponse) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{10}
}

func (x *GetAvailableTicketsResponse) GetTickets() []*Ticket {
	if x != nil {
		return x.Tickets
	}
	return nil
}

func (x *GetAvailableTicketsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ReserveTicketRequest struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	TicketId                  string                 `protobuf:"bytes,1,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id,omitempty"`
	UserId                    string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ReservationTimeoutMinutes int32                  `protobuf:"varint,3,opt,name=reservation_timeout_minutes,json=reservationTimeoutMinutes,proto3" json:"reservation_timeout_minutes,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ReserveTicketRequest) Reset() {
	*x = ReserveTicketRequest{}
	mi := &file_src_ticket_ticket_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveTicketRequest) ProtoMessage() {}

func (x *ReserveTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveTicketRequest.ProtoReflect.Descriptor instead.
func (*ReserveTicketRequest) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{11}
}

func (x *ReserveTicketRequest) GetTicketId() string {
	if x != nil {
		return x.TicketId
	}
	return ""
}

func (x *ReserveTicketRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReserveTicketRequest) GetReservationTimeoutMinutes() int32 {
	if x != nil {
		return x.ReservationTimeoutMinutes
	}
	return 0
}

type ReserveTicketResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Ticket        *Ticket                `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReserveTicketResponse) Reset() {
	*x = ReserveTicketResponse{}
	mi := &file_src_ticket_ticket_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReserveTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReserveTicketResponse) ProtoMessage() {}

func (x *ReserveTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_src_ticket_ticket_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReserveTicketResponse.ProtoReflect.Descriptor instead.
func (*ReserveTicketResponse) Descriptor() ([]byte, []int) {
	return file_src_ticket_ticket_proto_rawDescGZIP(), []int{12}
}

func (x *ReserveTicketResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReserveTicketResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReserveTicketResponse) GetTicket() *Ticket {
	if x != nil {
		return x.Ticket
	}
	return nil
}

var File_src_ticket_ticket_proto protoreflect.FileDescriptor

const file_src_ticket_ticket_proto_rawDesc = "" +
	"\n" +
	"\x17src/ticket/ticket.proto\x12\x06ticket\x1a\x1fgoogle/protobuf/timestamp.proto\"\xda\x01\n" +
	"\x06Ticket\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x1f\n" +
	"\vseat_number\x18\x03 \x01(\tR\n" +
	"seatNumber\x12\x18\n" +
	"\asection\x18\x04 \x01(\tR\asection\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x01R\x05price\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\tR\tupdatedAt\"&\n" +
	"\x14GetTicketByIdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"?\n" +
	"\x15GetTicketByIdResponse\x12&\n" +
	"\x06ticket\x18\x01 \x01(\v2\x0e.ticket.TicketR\x06ticket\"\x81\x01\n" +
	"\x13CreateTicketRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1f\n" +
	"\vseat_number\x18\x02 \x01(\tR\n" +
	"seatNumber\x12\x18\n" +
	"\asection\x18\x03 \x01(\tR\asection\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\">\n" +
	"\x14CreateTicketResponse\x12&\n" +
	"\x06ticket\x18\x01 \x01(\v2\x0e.ticket.TicketR\x06ticket\"\xa9\x01\n" +
	"\x13UpdateTicketRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bevent_id\x18\x02 \x01(\tR\aeventId\x12\x1f\n" +
	"\vseat_number\x18\x03 \x01(\tR\n" +
	"seatNumber\x12\x18\n" +
	"\asection\x18\x04 \x01(\tR\asection\x12\x14\n" +
	"\x05price\x18\x05 \x01(\x01R\x05price\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\">\n" +
	"\x14UpdateTicketResponse\x12&\n" +
	"\x06ticket\x18\x01 \x01(\v2\x0e.ticket.TicketR\x06ticket\"%\n" +
	"\x13DeleteTicketRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"J\n" +
	"\x14DeleteTicketResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"Q\n" +
	"\x1aGetAvailableTicketsRequest\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x18\n" +
	"\asection\x18\x02 \x01(\tR\asection\"h\n" +
	"\x1bGetAvailableTicketsResponse\x12(\n" +
	"\atickets\x18\x01 \x03(\v2\x0e.ticket.TicketR\atickets\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x8c\x01\n" +
	"\x14ReserveTicketRequest\x12\x1b\n" +
	"\tticket_id\x18\x01 \x01(\tR\bticketId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12>\n" +
	"\x1breservation_timeout_minutes\x18\x03 \x01(\x05R\x19reservationTimeoutMinutes\"s\n" +
	"\x15ReserveTicketResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12&\n" +
	"\x06ticket\x18\x03 \x01(\v2\x0e.ticket.TicketR\x06ticket2\xec\x03\n" +
	"\rTicketService\x12L\n" +
	"\rGetTicketById\x12\x1c.ticket.GetTicketByIdRequest\x1a\x1d.ticket.GetTicketByIdResponse\x12I\n" +
	"\fCreateTicket\x12\x1b.ticket.CreateTicketRequest\x1a\x1c.ticket.CreateTicketResponse\x12I\n" +
	"\fUpdateTicket\x12\x1b.ticket.UpdateTicketRequest\x1a\x1c.ticket.UpdateTicketResponse\x12I\n" +
	"\fDeleteTicket\x12\x1b.ticket.DeleteTicketRequest\x1a\x1c.ticket.DeleteTicketResponse\x12^\n" +
	"\x13GetAvailableTickets\x12\".ticket.GetAvailableTicketsRequest\x1a#.ticket.GetAvailableTicketsResponse\x12L\n" +
	"\rReserveTicket\x12\x1c.ticket.ReserveTicketRequest\x1a\x1d.ticket.ReserveTicketResponseB3Z1booking-system/ticket-service/proto/ticket;ticketb\x06proto3"

var (
	file_src_ticket_ticket_proto_rawDescOnce sync.Once
	file_src_ticket_ticket_proto_rawDescData []byte
)

func file_src_ticket_ticket_proto_rawDescGZIP() []byte {
	file_src_ticket_ticket_proto_rawDescOnce.Do(func() {
		file_src_ticket_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_src_ticket_ticket_proto_rawDesc), len(file_src_ticket_ticket_proto_rawDesc)))
	})
	return file_src_ticket_ticket_proto_rawDescData
}

var file_src_ticket_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_src_ticket_ticket_proto_goTypes = []any{
	(*Ticket)(nil),                      // 0: ticket.Ticket
	(*GetTicketByIdRequest)(nil),        // 1: ticket.GetTicketByIdRequest
	(*GetTicketByIdResponse)(nil),       // 2: ticket.GetTicketByIdResponse
	(*CreateTicketRequest)(nil),         // 3: ticket.CreateTicketRequest
	(*CreateTicketResponse)(nil),        // 4: ticket.CreateTicketResponse
	(*UpdateTicketRequest)(nil),         // 5: ticket.UpdateTicketRequest
	(*UpdateTicketResponse)(nil),        // 6: ticket.UpdateTicketResponse
	(*DeleteTicketRequest)(nil),         // 7: ticket.DeleteTicketRequest
	(*DeleteTicketResponse)(nil),        // 8: ticket.DeleteTicketResponse
	(*GetAvailableTicketsRequest)(nil),  // 9: ticket.GetAvailableTicketsRequest
	(*GetAvailableTicketsResponse)(nil), // 10: ticket.GetAvailableTicketsResponse
	(*ReserveTicketRequest)(nil),        // 11: ticket.ReserveTicketRequest
	(*ReserveTicketResponse)(nil),       // 12: ticket.ReserveTicketResponse
}
var file_src_ticket_ticket_proto_depIdxs = []int32{
	0,  // 0: ticket.GetTicketByIdResponse.ticket:type_name -> ticket.Ticket
	0,  // 1: ticket.CreateTicketResponse.ticket:type_name -> ticket.Ticket
	0,  // 2: ticket.UpdateTicketResponse.ticket:type_name -> ticket.Ticket
	0,  // 3: ticket.GetAvailableTicketsResponse.tickets:type_name -> ticket.Ticket
	0,  // 4: ticket.ReserveTicketResponse.ticket:type_name -> ticket.Ticket
	1,  // 5: ticket.TicketService.GetTicketById:input_type -> ticket.GetTicketByIdRequest
	3,  // 6: ticket.TicketService.CreateTicket:input_type -> ticket.CreateTicketRequest
	5,  // 7: ticket.TicketService.UpdateTicket:input_type -> ticket.UpdateTicketRequest
	7,  // 8: ticket.TicketService.DeleteTicket:input_type -> ticket.DeleteTicketRequest
	9,  // 9: ticket.TicketService.GetAvailableTickets:input_type -> ticket.GetAvailableTicketsRequest
	11, // 10: ticket.TicketService.ReserveTicket:input_type -> ticket.ReserveTicketRequest
	2,  // 11: ticket.TicketService.GetTicketById:output_type -> ticket.GetTicketByIdResponse
	4,  // 12: ticket.TicketService.CreateTicket:output_type -> ticket.CreateTicketResponse
	6,  // 13: ticket.TicketService.UpdateTicket:output_type -> ticket.UpdateTicketResponse
	8,  // 14: ticket.TicketService.DeleteTicket:output_type -> ticket.DeleteTicketResponse
	10, // 15: ticket.TicketService.GetAvailableTickets:output_type -> ticket.GetAvailableTicketsResponse
	12, // 16: ticket.TicketService.ReserveTicket:output_type -> ticket.ReserveTicketResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_src_ticket_ticket_proto_init() }
func file_src_ticket_ticket_proto_init() {
	if File_src_ticket_ticket_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_src_ticket_ticket_proto_rawDesc), len(file_src_ticket_ticket_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_src_ticket_ticket_proto_goTypes,
		DependencyIndexes: file_src_ticket_ticket_proto_depIdxs,
		MessageInfos:      file_src_ticket_ticket_proto_msgTypes,
	}.Build()
	File_src_ticket_ticket_proto = out.File
	file_src_ticket_ticket_proto_goTypes = nil
	file_src_ticket_ticket_proto_depIdxs = nil
}
