# PowerShell script ƒë·ªÉ validate v√† format proto files
# S·ª≠ d·ª•ng buf ƒë·ªÉ lint, format v√† check breaking changes

param(
    [switch]$SkipBreakingCheck
)

Write-Host "üîç Validating proto files..." -ForegroundColor Green

# Di chuy·ªÉn ƒë·∫øn th∆∞ m·ª•c proto-definitions
Set-Location "libs/proto-definitions"

try {
    # Lint proto files
    Write-Host "üìã Linting proto files..." -ForegroundColor Yellow
    buf lint
    if ($LASTEXITCODE -ne 0) {
        throw "Linting failed"
    }

    # Format proto files
    Write-Host "üé® Formatting proto files..." -ForegroundColor Yellow
    buf format -w
    if ($LASTEXITCODE -ne 0) {
        throw "Formatting failed"
    }

    # Check for breaking changes (n·∫øu c√≥ git history v√† kh√¥ng skip)
    if (-not $SkipBreakingCheck) {
        $mainBranchExists = git rev-parse --verify main 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "üö® Checking for breaking changes..." -ForegroundColor Yellow
            buf breaking --against '.git#branch=main'
            if ($LASTEXITCODE -ne 0) {
                Write-Host "‚ùå Breaking changes detected!" -ForegroundColor Red
                Write-Host "Please review the changes and update version if necessary." -ForegroundColor Red
                exit 1
            }
        }
    }

    # Generate files
    Write-Host "‚öôÔ∏è Generating proto files..." -ForegroundColor Yellow
    buf generate
    if ($LASTEXITCODE -ne 0) {
        throw "Generation failed"
    }

    Write-Host "‚úÖ Proto validation completed successfully!" -ForegroundColor Green

    # Ki·ªÉm tra xem c√≥ thay ƒë·ªïi g√¨ kh√¥ng
    $changes = git status --porcelain
    if ($changes) {
        Write-Host "üìù Changes detected in generated files:" -ForegroundColor Cyan
        Write-Host $changes -ForegroundColor Yellow
        Write-Host "üí° Please commit the generated files if needed." -ForegroundColor Cyan
    } else {
        Write-Host "‚ú® No changes detected in generated files." -ForegroundColor Green
    }

} catch {
    Write-Host "‚ùå Error: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
} finally {
    # Quay l·∫°i th∆∞ m·ª•c g·ªëc
    Set-Location "../.."
} 